<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.awslabplatform_admin.dao.systemManage.DictionaryDataDao">

	<resultMap type="com.awslabplatform_admin.entity.DictionaryData" id="DictionaryData">
		<result property="itemId" column="itemId"/>
		<result property="dicId" column="dicId"/>
		<result property="itemName" column="itemName"/>
		<result property="itemValue" column="itemValue"/>
		<result property="itemSort" column="itemSort"/>
	</resultMap>

    <!-- 查询父项数据字典列表 author:czy -->
	<select id="getDictionaryData" parameterType="DictionaryData" resultType="DictionaryData">
		SELECT
			tb_dic_type.dicId, tb_dic_type.dicCode, tb_dic_type.dicName
		FROM
			tb_dic_type
		<where>
			1=1
			<if test="dicStause != null">
				AND tb_dic_type.dicStause = #{dicStause}
			</if>
		</where>
	</select>

	<!-- 插入父项数据字典数据 author:czy -->
	<insert id="insert" parameterType="DictionaryData">
	<selectKey  keyProperty="dicId" resultType="java.lang.String" order="BEFORE">
         SELECT REPLACE(UUID(),'-','')
 	</selectKey>
       INSERT INTO tb_dic_type(
	       	dicId, dicCode, dicName)
       VALUES (
           #{dicId}, #{dicCode}, #{dicName})
	</insert>

	<!-- 查询数据字典父项的数量 author:czy -->
	<select id="countDictionaryData" parameterType="DictionaryData" resultType="int">
		SELECT
			COUNT(*)
		FROM
			tb_dic_type
		<where>
			1 = 1
			<if test="dicName != null">
				AND dicName = #{dicName}
			</if>
		</where>
	</select>

	<!-- 根据dicId查询数据字典父项的数据 author:czy -->
	<select id="getDicIdData" parameterType="String" resultType="DictionaryData">
		SELECT
			dicId,dicCode,dicName
		FROM
			tb_dic_type
		where
			dicId = #{dicId}
	</select>

	<!-- 修改父项的数据字典数据 author:czy -->
	<update id="updateByPrimaryKeySelective" parameterType="DictionaryData">
		UPDATE tb_dic_type
		<set>
			<if test="dicCode != null">
				dicCode = #{dicCode},
			</if>
			<if test="dicName != null">
				dicName = #{dicName},
			</if>
			<if test="dicStause != null">
				dicStause = #{dicStause},
			</if>
		</set>
		<where>
			dicId = #{dicId}
		</where>
	</update>

	<!-- 删除父项数据字典的数据-->
    <!-- <delete id="deleteDicParentData" parameterType="String" >
   		DELETE FROM tb_dic_type WHERE dicId = #{dicId}
  	</delete> -->

  	<!--      数据字典子项数据               -->

	<!-- 删除子项数据字典的数据-->
    <delete id="deleteDicSubItemData" parameterType="DictionaryData" >
   		DELETE FROM tb_dic_item WHERE dicId = #{dicId}
  	</delete>

	<!-- 获取子项的数据，将数据显示在表格上 author:czy -->
	<select id="getSubItemData"  parameterType="PageInfo" resultType="DictionaryData">
		SELECT
			tb_dic_item.itemId,tb_dic_item.dicId,tb_dic_item.itemName,tb_dic_item.itemValue,tb_dic_item.itemSort
		FROM
			tb_dic_item
	   <where>
			1 = 1
			<if test="condition.containsKey('dicId') and condition.dicId != ''">
				AND tb_dic_item.dicId = #{condition.dicId}
			</if>
	   </where>
	   LIMIT #{from}, #{size}
	</select>

	<!-- 查询数据字典子项的数量 author:czy -->
	<select id="countDicSubItemData" parameterType="PageInfo" resultType="int">
		SELECT
			COUNT(*)
		FROM
			tb_dic_item
		<where>
			1 = 1
			<if test="condition.containsKey('dicId') and condition.dicId != ''">
				AND tb_dic_item.dicId = #{condition.dicId}
			</if>
			<if test="condition.containsKey('itemName') and condition.itemName != ''">
				AND tb_dic_item.itemName = #{condition.itemName}
			</if>
			<if test="condition.containsKey('itemValue') and condition.itemValue != ''">
				AND tb_dic_item.itemValue = #{condition.itemValue}
			</if>
		</where>
	</select>

	<!-- 根据父项的dicCode获取子项的数据接口  author:czy -->
	<select id="getSubItemListData" parameterType="String" resultType="DictionaryData">
		SELECT
			b.dicCode, b.dicName, a.itemId,a.dicId,a.itemName,a.itemValue,a.itemSort
		FROM
			tb_dic_item as a
		LEFT OUTER JOIN
			tb_dic_type as b on (b.dicId=a.dicId)
	   <where>
			1 = 1
			<if test="dicCode != null">
				AND b.dicCode = #{dicCode}
			</if>
	   </where>
	</select>
	
	<!-- 根据当前登入的用户id显示对应的IAM类型  -->
	<select id="getIamTypeData" parameterType="Map" resultType="DictionaryData">
		SELECT DISTINCT
			b.dicCode, b.dicName, a.itemId,a.dicId,a.itemName,a.itemValue,a.itemSort
		FROM tb_dic_item as a
		LEFT OUTER JOIN tb_dic_type as b on (b.dicId=a.dicId)
		LEFT OUTER JOIN tb_aws_iam as d on (d.IAMtype=a.itemId)
	   <where>
			1 = 1
			<if test="dicCode != null">
				AND b.dicCode = #{dicCode} AND (a.itemId='f6b004d630c611e8bb7400163e0ce5d1' OR a.itemId='00a3fe7c30c711e8bb7400163e0ce5d1' OR a.itemId='0a9a3a2030c711e8bb7400163e0ce5d1')
			</if>				
	   </where>
	</select>

	<!-- 查询数据字典子项的数量 author:czy -->
	<select id="countSubItemData" parameterType="DictionaryData" resultType="int">
		SELECT
			COUNT(*)
		FROM
			tb_dic_item
		<where>
			1 = 1
			<if test="dicId != null">
				AND dicId = #{dicId}
			</if>
			<if test="itemName != null and itemValue != null">
				AND (itemName = #{itemName} OR itemValue = #{itemValue})
			</if>
		</where>
	</select>

	<!-- 插入子项数据字典数据 author:czy -->
	<insert id="insertSubItem" parameterType="DictionaryData">
	<selectKey  keyProperty="itemId" resultType="java.lang.String" order="BEFORE">
         SELECT REPLACE(UUID(),'-','')
 	</selectKey>
       INSERT INTO tb_dic_item(
	       	itemId,dicId, itemName,itemValue,itemSort)
       VALUES (
           #{itemId},#{dicId},#{itemName},#{itemValue},#{itemSort})
	</insert>


	<!-- 根据itemId查询数据字典子项的数据 author:czy -->
	<select id="getItemIdSubItemData" parameterType="String" resultType="DictionaryData">
		SELECT
			itemId,dicId, itemName,itemValue,itemSort
		FROM
			tb_dic_item
		where
			itemId = #{itemId}
	</select>

	<!-- 修改子项的数据字典数据 author:czy -->
	<update id="updateSubItemData" parameterType="DictionaryData">
		UPDATE tb_dic_item
		<set>
			<if test="itemName != null">
				itemName = #{itemName},
			</if>
			<if test="itemValue != null">
				itemValue = #{itemValue},
			</if>
		</set>
		<where>
			itemId = #{itemId}
		</where>
	</update>

	<!-- 根据itemId删除子项数据字典的数据-->
    <delete id="deleteSubItem" parameterType="String" >
   		DELETE FROM tb_dic_item WHERE itemId = #{itemId}
  	</delete>

	<!--获取数据字典数据-->
	<select id="getDicDataByDicId" parameterType="java.lang.String" resultMap="DictionaryData">
		SELECT
			tb_dic_item.itemId, tb_dic_item.itemName
		FROM
			tb_dic_item
			<where>
				tb_dic_item.dicId = #{courseTypeDicId}
			</where>
	</select>

	<!--获取数据字典数据名-->
	<select id="getDicDataNameByItemId" parameterType="java.lang.String" resultType="String">
		SELECT
			itemName
		FROM
			tb_dic_item
			<where>
				tb_dic_item.itemId = #{itemId}
			</where>
	</select>

	<!--根据课程代码查找数据字典ID-->
	<select id="getDicIdByDicCode" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT
			tb_dic_type.dicId
			FROM
			tb_dic_type
			<where>
				tb_dic_type.dicCode=#{dicCode}
			</where>
	</select>
	
	<!-- 获取课程类型是否存在 -->
	<select id="selectCourseTypeByDicIdAndName" resultType="int">
		SELECT
			COUNT(*)
		FROM
			tb_dic_item AS i
		WHERE
			i.dicId = #{dicId}
			AND
			i.itemName = #{courseTypeName}
	</select>
	
	<!-- 查询课程类型数量 -->
	<select id="countCourseTypeTotal" resultType="int">
		SELECT
			COUNT(*)
		FROM
			tb_dic_item AS i
		WHERE
			i.dicId = #{dicId}
	</select>
	
	<!-- 添加课程类型数据到子项表 -->
	<insert id="addCourseTypeDateToSubItem" parameterType="DictionaryData">
		INSERT INTO tb_dic_item(
	       	itemId,dicId,itemName,itemValue,itemSort)
       	VALUES (
           	#{itemId},#{dicId},#{itemName},#{itemValue},#{itemSort})
	</insert>
</mapper>
