<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.awslabplatform_admin.dao.systemManage.RoleDao">

	<resultMap type="com.awslabplatform_admin.entity.Role" id="RoleMap">
		<result property="roleId" column="roleId" />
		<result property="roleName" column="roleName" />
		<result property="roleDESC" column="roleDESC" />
		<result property="roleType" column="roleType" />
		<result property="createBy" column="createBy" />
		<result property="createTime" column="createTime" />
		<result property="updateBy" column="updateBy" />
		<result property="updateTime" column="updateTime" />
	</resultMap>

	<insert id="insert" parameterType="Role">
	<selectKey  keyProperty="roleId" resultType="java.lang.String" order="BEFORE">
         SELECT REPLACE(UUID(),'-','')
 	</selectKey>
       INSERT INTO tb_role(
	       	roleId, roleName, roleDESC, roleType, createBy, createTime, updateBy,updateTime, authorityTime, state)
       VALUES (
           #{roleId}, #{roleName}, #{roleDESC}, #{roleType}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{authorityTime}, #{state})
	</insert>

    <!-- 查询角色author:wx -->
	<select id="selectByCondition"  resultType="Role">
		SELECT
			tb_role.roleId AS roleId,
			tb_role.roleName AS roleName,
			tb_role.roleDESC AS roleDESC,
			tb_role.roleType AS roleType,
			tb_role.createBy AS createBy,
			tb_role.createTime AS createTime,
			tb_role.updateBy AS updateBy,
			tb_role.updateTime AS updateTime,
			tb_role.authorityTime AS authorityTime
		FROM
			tb_role
		<where>
			roleId = #{roleId} AND state = #{state}
		</where>
	</select>


	<sql id="roleInfoCondition">
		<if test="condition.containsKey('roleName') and condition.roleName != ''">
			AND tb_role.roleName like concat('%',#{condition.roleName},'%')
		</if>
		<if test="condition.containsKey('roleType') and condition.roleType != '-1'">
			AND tb_role.roleType = #{condition.roleType}
		</if>
		<if test="condition.containsKey('state')">
			AND tb_role.state = #{condition.state}
		</if>
	</sql>
    <!-- 查询角色author:wx -->
	<select id="listRoleInfo" parameterType="PageInfo" resultType="Role">
		SELECT
			tb_role.roleId AS roleId,
			tb_role.roleName AS roleName,
			tb_role.roleDESC AS roleDESC,
			tb_role.roleType AS roleType,
			tb_role.createBy AS createBy,
			tb_role.createTime AS createTime,
			tb_role.updateBy AS updateBy,
			tb_role.updateTime AS updateTime,
			tb_role.authorityTime AS authorityTime
		FROM
			tb_role
		<where>
			1 =1
			<include refid="roleInfoCondition"/>
		</where>
		LIMIT #{from}, #{size}
	</select>
	

    <!-- 查询角色总数author:wx -->
	<select id="getRoleInfoTotal" parameterType="PageInfo" resultType="int">
		SELECT
			COUNT(*)
		FROM
			tb_role
		<where>
			1 =1
			<include refid="roleInfoCondition"/>
		</where>
	</select>

    <!-- 查询角色数量author:wx -->
	<select id="getRoleNum" parameterType="Map" resultType="int">
		SELECT
			COUNT(*)
		FROM
			tb_role
		<where>
			1 = 1
			<if test="roleName != null">
				AND roleName = #{roleName}
			</if>

			<if test="state != null">
				AND state = #{state}
			</if>
		</where>
	</select>

   	<update id="updateByPrimaryKeySelective" parameterType="Role">
        UPDATE tb_role
        <set>
            <if test="roleName != null">
                roleName = #{roleName},
            </if>
            <if test="roleDESC != null">
                roleDESC = #{roleDESC},
            </if>
            <if test="roleType != null">
                roleType = #{roleType},
            </if>
            <if test="createBy != null">
                createBy = #{createBy},
            </if>
            <if test="createTime != null">
                createTime = #{createTime},
            </if>
            <if test="updateBy != null">
                updateBy = #{updateBy},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime},
            </if>
            <if test="authorityTime != null">
                authorityTime = #{authorityTime},
            </if>
        </set>
        <where>
        	roleId = #{roleId}
        </where>
    </update>


    <!-- 删除角色author:wx -->
	<update id="deleteRole" parameterType="Map" >
		UPDATE
			tb_role
		<set>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="updateBy != null">
                updateBy = #{updateBy},
            </if>
        </set>
        <where>
        	roleId = #{roleId}
        </where>
	</update>

	<!-- 插入角色权限 -->
	<insert id="insertRolePermisson" parameterType="Map" >
   		INSERT INTO
   	 		tb_role_menu (roleId, menuId)
    	VALUES
    	<foreach collection="menuList" item="item" index="index" separator="," >
           (#{roleId}, #{item})
    	</foreach>
  	</insert>
  	
  	<!-- 插入角色与用户的关联表 -->
	<insert id="insertRoleUser" parameterType="Map" >
   		INSERT INTO
   	 		tb_role_user (userId,roleId)
    	VALUES
    		(#{userId}, #{roleId})
  	</insert>

	<!-- 删除角色权限 -->
    <delete id="deleteRolePermisson" parameterType="String" >
   		DELETE FROM tb_role_menu
    	WHERE roleId = #{roleId}
  	</delete>

    <!-- 更新授权时间 -->
    <update id="updateAuthorityTime" parameterType="Map" >
   		UPDATE
			 tb_role
   		SET
   			authorityTime = #{authorityTime}
    	WHERE roleId = #{roleId}
  	</update>

	<!-- 修改角色与用户的关联表 -->
	<update id="updateRoleUser" parameterType="Map" >
   		UPDATE
   	 		tb_role_user
    	SET
    		roleId=#{roleId}
    	WHERE
    		userId=#{userId}
  	</update>
  	
	<!-- 查询用户对应角色 -->
	<select id="listRoleByUserId" parameterType="Map" resultType="Role" >
		SELECT 
			tb_role.roleId, roleName, tb_role.roleType
		FROM
			tb_role_user, tb_role, tb_user 
		WHERE
			tb_role.roleId = tb_role_user.roleId AND tb_user.userId = tb_role_user.userId
			<if test = " userId!=null and userId!='' ">
				AND tb_user.userId = #{userId}
			</if>
			<if test = " state!=null and state!='' ">
				AND tb_role.state = #{state}
			</if>
	</select>

	<!-- 统计角色对应用户数量-->
	<select id="countUserSize" parameterType="String" resultType="long">
		select count(DISTINCT userId)
		from tb_role_user WHERE roleId = #{roleId};
	</select>
	
	 <!-- 查询角色，用来显示对应用户的用户类型 author:czy -->
	<select id="findByRoleData" parameterType="Role" resultMap="RoleMap">
		SELECT
			tb_role.roleId AS roleId,
			tb_role.roleName AS roleName,
			tb_role.roleDESC AS roleDESC,
			tb_role.roleType AS roleType,
			tb_role.createBy AS createBy,
			tb_role.createTime AS createTime,
			tb_role.updateBy AS updateBy,
			tb_role.updateTime AS updateTime,
			tb_role.authorityTime AS authorityTime
		FROM
			tb_role
		<where>
			1=1
			<if test="roleType != null and roleType!=''">
               and tb_role.roleType = #{roleType}
            </if>
            <if test="state!=null and state!=''">
               and tb_role.state = #{state}
            </if>
		</where>
	</select>
</mapper>
